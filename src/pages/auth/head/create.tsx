import { Button, buttonVariants } from "~/components/ui/button";
import { Input } from "~/components/ui/input";
import { api } from "~/utils/api";
import { useEffect, useState } from "react";
import { Check, Command, Loader2, LogOut } from "lucide-react";
import Head from "next/head";
import { useSearchParams } from "next/navigation";
import { useRouter } from "next/router";
import { signOut, useSession } from "next-auth/react";
import Link from "next/link";
import { cn } from "~/utils/cn";

export default function AuthenticationPage() {
  const [checkLoading, setCheckLoading] = useState(false);
  const [loading, setLoading] = useState(false);

  const [input, setInput] = useState("");

  const router = useRouter();
  const { update } = useSession();

  const { mutate: createHead } = api.head.add.useMutation({
    onMutate: () => {
      setLoading(true);
    },
    onSuccess: async () => {
      setLoading(false);
      await update();
      void router.push("/");
    },
    onError: () => {
      setLoading(false);
    },
  });

  return (
    <>
      <Head>
        <title>CRM / Invite</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen items-center justify-center px-8 lg:grid lg:grid-cols-2 lg:px-0">
        <div className="relative hidden h-screen flex-col justify-between bg-zinc-900 p-10 text-white lg:flex">
          <div className="flex items-center gap-2 text-lg font-medium">
            <Command />
            CRM
          </div>
          <div className="flex text-lg">Open-Source Contact Management</div>
        </div>
        <div className="lg:p-8">
          <div className="mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]">
            <div className="flex flex-col space-y-2 text-center">
              <h1 className="text-2xl font-semibold tracking-tight">
                Create an organization
              </h1>
              <p className="text-sm text-muted-foreground">
                Enter the name of your organization
              </p>
            </div>
            <div className="flex flex-col gap-3">
              <Input
                placeholder="Organization name"
                value={input}
                onChange={(e) => {
                  setInput(e.target.value);
                }}
              />
              <Button
                onClick={() => {
                  createHead({ name: input });
                }}
              >
                {loading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
                Create
              </Button>
            </div>
            <Link
              href={"/auth/head/invite"}
              className={cn(buttonVariants({ variant: "link" }))}
            >
              Join an existing one
            </Link>
            <Button
              variant={"link"}
              className="text-muted-foreground"
              onClick={() => {
                void signOut();
              }}
            >
              Logout
            </Button>
          </div>
        </div>
      </div>
    </>
  );
}
