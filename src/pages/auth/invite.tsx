import { Button } from "~/components/ui/button";
import { Input } from "~/components/ui/input";
import { api } from "~/utils/api";
import { useEffect, useState } from "react";
import { Check, Command, Loader2 } from "lucide-react";
import Head from "next/head";
import { useSearchParams } from "next/navigation";
import { useRouter } from "next/router";
import { useSession } from "next-auth/react";

export default function AuthenticationPage() {
  const [checkLoading, setCheckLoading] = useState(false);
  const [check, setCheck] = useState(false);
  const [loading, setLoading] = useState(false);

  const [codeInput, setCodeInput] = useState("");

  const router = useRouter();
  const { update } = useSession();

  const [inputTimer, setInputTimer] = useState<NodeJS.Timeout>();

  const { mutate: useInvite } = api.head.useInvite.useMutation({
    onMutate: () => {
      setLoading(true);
    },
    onSuccess: async (data) => {
      console.log(data);
      if (data) {
        setLoading(false);
        await update();
        void router.push("/");
      }
    },
    onError: () => {
      setLoading(false);
    },
  });

  const { mutate: checkInvite } = api.head.checkInvite.useMutation({
    onMutate: () => {
      setCheck(false);
      setCheckLoading(true);
    },
    onSuccess: (data) => {
      setCheckLoading(false);
      !!data && setCheck(true);
    },
  });

  const queryParameters = useSearchParams();

  useEffect(() => {
    if (queryParameters.get("code")) {
      setCodeInput(queryParameters.get("code")!);
      useInvite({ inviteCode: queryParameters.get("code")! });
    }
  }, [queryParameters.get("code")]);

  return (
    <>
      <Head>
        <title>CRM / Invite</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen items-center justify-center px-8 lg:grid lg:grid-cols-2 lg:px-0">
        <div className="relative hidden h-screen flex-col justify-between bg-zinc-900 p-10 text-white lg:flex">
          <div className="flex items-center gap-2 text-lg font-medium">
            <Command />
            CRM
          </div>
          <div className="flex text-lg">Open-Source Contact Management</div>
        </div>
        <div className="lg:p-8">
          <div className="mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]">
            <div className="flex flex-col space-y-2 text-center">
              <h1 className="text-2xl font-semibold tracking-tight">
                Join a team to enter the CRM
              </h1>
              <p className="text-sm text-muted-foreground">
                Enter the invite code provided to you by the team's admin
              </p>
            </div>
            <div className="flex flex-col gap-3">
              <div className="relative">
                <Input
                  placeholder="Invite code"
                  value={codeInput}
                  onChange={(e) => {
                    clearTimeout(inputTimer);
                    setInputTimer(() => {
                      return setTimeout(() => {
                        checkInvite({ inviteCode: e.target.value });
                      }, 600);
                    });
                    setCodeInput(e.target.value);
                  }}
                />
                <Button
                  className="absolute right-1.5 top-1.5 w-7 h-7"
                  size={"icon"}
                  variant={"ghost"}
                >
                  {checkLoading && <Loader2 className="w-4 h-4 animate-spin" />}
                  {check && <Check className="w-4 h-4 text-green-500" />}
                </Button>
              </div>
              <Button
                onClick={() => {
                  useInvite({ inviteCode: codeInput });
                }}
              >
                {loading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
                Enter
              </Button>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
