import Head from "next/head";

import { api } from "~/utils/api";
import { Breadcrumbs } from "~/components/breadcrumbs";
import type { NextPage } from "next";
import { Skeleton } from "~/components/ui/skeleton";
import { CompanyIndividualPage } from "~/components/individual-page/company-individual-page";
import { Layout } from "~/components/layout";

const CompanyPage: NextPage<{ id: string }> = ({ id }) => {
  const { data: companyData, isLoading } = api.company.get.useQuery({
    id,
    include: {
      contacts: true,
      projects: true,
      activities: true,
    },
  });

  if (isLoading) {
    console.log("is loading!!!");
  }

  return (
    <>
      <Head>
        <title>CRM / Companies </title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="flex flex-grow flex-col p-5">
          {/* HEADER */}
          <div className="flex items-center justify-between">
            <div className="flex flex-col">
              {!companyData && <Skeleton className="h-7 text-transparent" />}
              {!!companyData && (
                <h1 className="text-xl font-bold">{companyData.name}</h1>
              )}
              <span className="text-sm text-muted-foreground">
                {!!companyData?.info?.length || companyData?.field?.length ? (
                  <>
                    {companyData.info}{" "}
                    {companyData.info && companyData.field && <>&#x2022;</>}{" "}
                    {companyData.field}
                  </>
                ) : (
                  <>View contact details.</>
                )}
              </span>
            </div>
            <EditCompany company={companyData ?? null} />
          </div>
          <Breadcrumbs lastItem={companyData?.name ?? id} />
          <CompanyIndividualPage companyId={id} company={companyData ?? null} />
        </div>
      </Layout>
    </>
  );
};

import { createServerSideHelpers } from "@trpc/react-query/server";
import type { GetServerSidePropsContext } from "next";
import superjson from "superjson";
import { appRouter } from "~/server/api/root";
import { getSession } from "next-auth/react";
import { db } from "~/server/db";
import { EditCompany } from "~/components/individual-page/edit-button/edit-company";
import { EventEmitter } from "events";

export async function getServerSideProps(
  context: GetServerSidePropsContext<{ id: string }>
) {
  const helpers = createServerSideHelpers({
    router: appRouter,
    ctx: { db, session: await getSession(context), ee: new EventEmitter() },
    transformer: superjson,
  });
  const id = context.params?.id ?? "";
  /*
   * Prefetching the `post.byId` query.
   * `prefetch` does not return the result and never throws - if you need that behavior, use `fetch` instead.
   */
  await helpers.company.get.fetch({
    id,
    include: {
      contacts: true,
      projects: true,
      activities: true,
    },
  });
  // Make sure to return { props: { trpcState: helpers.dehydrate() } }
  return {
    props: {
      trpcState: helpers.dehydrate(),
      id,
    },
  };
}

export default CompanyPage;
